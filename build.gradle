plugins {
    id 'java'
}

repositories {
    mavenCentral()
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://nexus.scarsz.me/content/groups/public/" }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"

    compileOnly "com.discordsrv:discordsrv:1.26.0"

    compileOnly fileTree(dir:"libs/",include:"*.jar")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            plugin_name: plugin_name, plugin_version: plugin_version, plugin_main: plugin_main, plugin_api_version: plugin_api_version, plugin_authors: plugin_authors
    ]

    inputs.properties replaceProperties

    filesMatching(['plugin.yml']) {
        expand replaceProperties + [project: project]
    }
}

def targetJavaVersion = 20
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar{
}

tasks.withType(JavaCompile).configureEach {
    libsDirectory.set(file("/server/plugins/"))
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
